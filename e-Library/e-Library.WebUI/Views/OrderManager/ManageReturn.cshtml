@model e_Library.Core.Models.Return
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Return Order</h4>
        <hr />
        @Html.HiddenFor(model => model.Id)

        <div class="col-md-10">
            <div class="form-group">
                @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RefundType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RefundType, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.StatusList), new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <div class="form-group">
        <div class="col-md-offset-1 col-md-10">
            <br />
            <input type="submit" onclick="ValidateMsg()" value="Confirm Return" class="btn btn-default" />
        </div>
    </div>

    <script>
        function ValidateMsg() { swal("Return Response Successful!", "Customer has been notified of the response!", "success"); }
    </script>
}